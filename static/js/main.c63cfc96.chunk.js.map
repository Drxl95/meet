{"version":3,"sources":["Event.js","EventList.js","Alert.js","CitySearch.js","NumberOfEvents.js","EventGenre.js","img/logo.svg","img/google-logo.jpg","WelcomeScreen.jsx","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","detailsOpen","this","setState","event","props","className","summary","Date","start","dateTime","toString","location","description","href","onClick","showDetails","Component","EventList","events","map","id","Alert","getStyle","color","style","text","InfoAlert","ErrorAlert","OfflineAlert","CitySearch","query","suggestions","showSuggestions","undefined","handleInputChanged","value","target","locations","filter","toUpperCase","indexOf","length","infoText","handleItemClicked","suggestion","updateEvents","type","onChange","onFocus","placeholder","display","NumberOfEvents","numberOfEvents","inputChange","e","eventCount","console","log","errorText","EventGenre","useState","data","setData","COLORS","useEffect","genre","split","includes","name","ResponsiveContainer","height","PieChart","width","Pie","cx","cy","labelLine","outerRadius","fill","dataKey","label","percent","toFixed","entry","index","Cell","WelcomeScreen","showWelcomeScreen","src","logo","alt","googleLogo","align","getAccessToken","rel","mockData","extractLocations","Set","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","getEvents","NProgress","window","startsWith","done","navigator","onLine","localStorage","getItem","JSON","parse","token","removeQuery","url","axios","get","setItem","stringify","history","pushState","pathname","newurl","protocol","host","getToken","code","encodeCode","encodeURIComponent","access_token","tokenCheck","removeItem","searchParams","URLSearchParams","search","results","authUrl","App","currentLocation","offlineAlert","filteredEvents","slice","getData","number","city","shift","mounted","isTokenValid","fontSize","margin","ScatterChart","top","right","bottom","left","CartesianGrid","XAxis","position","dy","YAxis","allowDecimals","angle","Tooltip","cursor","strokeDasharray","Scatter","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","atatus","install","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","headers","response","contentType","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.c63cfc96.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Event extends Component {\r\n    state = {\r\n        detailsOpen: false,\r\n    }\r\n\r\n    showDetails() {\r\n        if (this.state.detailsOpen === false) {\r\n            this.setState({ detailsOpen: true })\r\n        } else {\r\n            this.setState({ detailsOpen: false })\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { event } = this.props\r\n        return (\r\n            <section className=\"event-section\">\r\n                <div className=\"event\">\r\n                    <h1 className=\"name\">{event.summary}</h1>\r\n                    <p className=\"date\">{new Date(event.start.dateTime).toString()}</p>\r\n                    <p className=\"location\">{event.location}</p>\r\n                    <h3>About event:</h3>\r\n                    <p className=\"details\">{!this.state.detailsOpen ? \"\" : event.description}</p>\r\n                    <div className=\"link-div\">\r\n                        <a className=\"link\" href=\"#\">See details on Google Calendar</a>\r\n                    </div>\r\n                    <div className=\"button-div\">\r\n                        <button className=\"details-btn\" onClick={() => {\r\n                            this.showDetails()\r\n                        }}>\r\n                            {!this.state.detailsOpen ? \"more details\" : \"less details\"}\r\n                        </button>\r\n                    </div>\r\n\r\n                </div>\r\n            </section>\r\n\r\n        );\r\n    }\r\n}\r\nexport default Event;","import React, { Component } from 'react';\r\n\r\nimport Event from './Event';\r\n\r\nclass EventList extends Component {\r\n    render() {\r\n        const { events } = this.props;\r\n        return (\r\n            <ul className=\"EventList\">\r\n                {events.map(event =>\r\n                    <li key={event.id}>\r\n                        <Event event={event} />\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EventList;","import React, { Component } from 'react';\r\n\r\nclass Alert extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.color = null;\r\n    }\r\n\r\n    getStyle = () => {\r\n        return {\r\n            color: this.color,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Alert\">\r\n                <p style={this.getStyle()}>{this.props.text}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass InfoAlert extends Alert {\r\n    constructor(props) {\r\n        super(props);\r\n        this.color = 'blue';\r\n    }\r\n}\r\n\r\nclass ErrorAlert extends Alert {\r\n    constructor(props) {\r\n        super(props);\r\n        this.color = 'red';\r\n    }\r\n}\r\n\r\nclass OfflineAlert extends Alert {\r\n    constructor(props) {\r\n        super(props);\r\n        this.color = 'blue';\r\n    }\r\n}\r\n\r\nexport { InfoAlert, ErrorAlert, OfflineAlert };\r\n","import React, { Component } from 'react';\r\nimport { InfoAlert } from './Alert';\r\n\r\nclass CitySearch extends Component {\r\n    state = {\r\n        query: '',\r\n        suggestions: [],\r\n        showSuggestions: undefined\r\n    }\r\n\r\n\r\n    handleInputChanged = (event) => {\r\n        const value = event.target.value;\r\n        const suggestions = this.props.locations.filter((location) => {\r\n            return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n        });\r\n        if (suggestions.length === 0) {\r\n            this.setState({\r\n                query: value,\r\n                infoText: 'We could not find the city you are looking for. Please try another city.',\r\n            });\r\n        } else {\r\n            return this.setState({\r\n                query: value,\r\n                suggestions,\r\n                infoText: ''\r\n            });\r\n        }\r\n\r\n    };\r\n    handleItemClicked = (suggestion) => {\r\n        this.setState({\r\n            query: suggestion,\r\n            suggestions: [],\r\n            showSuggestions: false,\r\n            infoText: ''\r\n        });\r\n\r\n        this.props.updateEvents(suggestion);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <InfoAlert text={this.state.infoText} />\r\n                <div className=\"CitySearch\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"city\"\r\n                        value={this.state.query}\r\n                        onChange={this.handleInputChanged}\r\n                        onFocus={() => {\r\n                            this.setState({ showSuggestions: true })\r\n                        }}\r\n                        placeholder=\"Search for a city...\"\r\n                    />\r\n                    <ul className=\"suggestions\" style={this.state.showSuggestions ? {} : { display: 'none' }}>\r\n                        {this.state.suggestions.map((suggestion) => (\r\n                            <li\r\n                                key={suggestion}\r\n                                onClick={() => this.handleItemClicked(suggestion)}\r\n                            >{suggestion}</li>\r\n                        ))}\r\n                        <li>\r\n                            <b onClick={() => this.handleItemClicked(\"all\")}>See all cities</b>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default CitySearch;\r\n\r\n","import React, { Component } from \"react\";\r\nimport { ErrorAlert } from './Alert';\r\n\r\nclass NumberOfEvents extends Component {\r\n    state = {\r\n        numberOfEvents: '',\r\n    };\r\n\r\n    inputChange = (e) => {\r\n        let eventCount = e.target.value;\r\n        console.log(eventCount);\r\n        if (eventCount === '') {\r\n            this.setState({\r\n                numberOfEvents: eventCount,\r\n                errorText: ''\r\n            });\r\n        } else if (eventCount < 1 || eventCount > 32) {\r\n            this.setState({\r\n                numberOfEvents: eventCount,\r\n                errorText: 'Please enter a number between 1 and 32',\r\n            });\r\n        } else {\r\n            this.setState({\r\n                numberOfEvents: eventCount,\r\n                errorText: ''\r\n            });\r\n        }\r\n\r\n        this.props.updateEvents(null, eventCount);\r\n    };\r\n\r\n    render() {\r\n        const { numberOfEvents } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <ErrorAlert text={this.state.errorText} />\r\n                <div className=\"numberOfEvents\">\r\n                    {/* <label className=\"number-of-events\">Events: </label> */}\r\n                    <input type=\"number\" className=\"change-number\" value={numberOfEvents} onChange={this.inputChange} placeholder=\"Enter number of events...\" />\r\n                </div>\r\n            </>\r\n\r\n        );\r\n    }\r\n};\r\nexport default NumberOfEvents;","\r\nimport React, { useEffect, useState } from 'react';\r\nimport { PieChart, Pie, Cell, ResponsiveContainer } from 'recharts';\r\n\r\nconst EventGenre = ({ events }) => {\r\n    const [data, setData] = useState([]);\r\n    const COLORS = ['#f8b195', '#f67280', '#c06c87', '#6c5b7b', '#355c7d'];\r\n\r\n    const getData = () => {\r\n        const genres = ['React', 'JavaScript', 'Node', 'jQuery', 'AngularJS'];\r\n        let data = genres.map((genre) => {\r\n            const value = events.filter((event) =>\r\n                event.summary.split(' ').includes(genre)).length;\r\n            return { name: genre, value };\r\n        });\r\n        return data;\r\n    };\r\n\r\n    useEffect(() => {\r\n        setData(() => getData());\r\n    }, [events]);\r\n\r\n\r\n    return (\r\n        <ResponsiveContainer height={400} >\r\n            <PieChart width={400} height={400}>\r\n                <Pie\r\n                    data={data}\r\n                    cx={200}\r\n                    cy={200}\r\n                    labelLine={false}\r\n                    outerRadius={80}\r\n                    fill=\"#8884d8\"\r\n                    dataKey=\"value\"\r\n                    label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`}\r\n                >\r\n                    {data.map((entry, index) => (\r\n                        <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} name={entry.name} />\r\n                    ))}\r\n                </Pie>\r\n            </PieChart>\r\n        </ResponsiveContainer>\r\n    )\r\n\r\n};\r\n\r\nexport default EventGenre;","export default __webpack_public_path__ + \"static/media/logo.bf9c5130.svg\";","export default __webpack_public_path__ + \"static/media/google-logo.84f91408.jpg\";","import React from \"react\";\r\nimport './WelcomeScreen.css';\r\nimport logo from './img/logo.svg';\r\nimport googleLogo from './img/google-logo.jpg';\r\nfunction WelcomeScreen(props) {\r\n    return props.showWelcomeScreen ?\r\n        (\r\n            <div className=\"WelcomeScreen\">\r\n                <nav className=\"welcome-nav\">\r\n                     <img className=\"welcome-logo\" src={logo} alt=\"logo\"></img>\r\n                </nav>\r\n\r\n                <div className=\"content-container\">\r\n                    <img  className=\"google-logo\" src={googleLogo} alt=\"logo\"></img>\r\n                <h4 className=\"welcome-text\">\r\n                    Log in to see upcoming events around the world for\r\n                    full-stack\r\n                    developers\r\n                </h4>\r\n                <div className=\"button_cont\" align=\"center\">\r\n                    <div className=\"google-btn\">\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img\r\n                                className=\"google-icon\"\r\n                                src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\"\r\n                                alt=\"Google sign-in\"\r\n                            />\r\n                        </div>\r\n                        <button onClick={() => { props.getAccessToken() }}\r\n                            rel=\"nofollow noopener\"\r\n                            className=\"btn-text\"\r\n                        >\r\n                            <b>Sign in with google</b>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <a\r\n                    className=\"privacy-link\"\r\n                    href=\"https://Drxl95.github.io/meet/privacy.html\"\r\n                    rel=\"nofollow noopener\">\r\n                    Privacy policy\r\n                </a>\r\n                </div>\r\n        </div>\r\n                \r\n               \r\n        )\r\n        : null\r\n}\r\nexport default WelcomeScreen;","\r\nconst mockData = [\r\n\r\n    {\r\n        \"kind\": \"calendar#event\",\r\n        \"etag\": \"\\\"3181161784712000\\\"\",\r\n        \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\r\n        \"status\": \"confirmed\",\r\n        \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n        \"created\": \"2020-05-19T19:17:46.000Z\",\r\n        \"updated\": \"2020-05-27T12:01:32.356Z\",\r\n        \"summary\": \"Learn JavaScript\",\r\n        \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\r\n        \"location\": \"London, UK\",\r\n        \"creator\": {\r\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n            \"self\": true\r\n        },\r\n        \"organizer\": {\r\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n            \"self\": true\r\n        },\r\n        \"start\": {\r\n            \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"end\": {\r\n            \"dateTime\": \"2020-05-19T17:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\r\n        \"originalStartTime\": {\r\n            \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\r\n        \"sequence\": 0,\r\n        \"reminders\": {\r\n            \"useDefault\": true\r\n        },\r\n        \"eventType\": \"default\"\r\n    },\r\n    {\r\n        \"kind\": \"calendar#event\",\r\n        \"etag\": \"\\\"3181159875584000\\\"\",\r\n        \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\r\n        \"status\": \"confirmed\",\r\n        \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n        \"created\": \"2020-05-19T19:14:30.000Z\",\r\n        \"updated\": \"2020-05-27T11:45:37.792Z\",\r\n        \"summary\": \"React is Fun\",\r\n        \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\r\n        \"location\": \"Berlin, Germany\",\r\n        \"creator\": {\r\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n            \"self\": true\r\n        },\r\n        \"organizer\": {\r\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n            \"self\": true\r\n        },\r\n        \"start\": {\r\n            \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"end\": {\r\n            \"dateTime\": \"2020-05-20T15:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\r\n        \"originalStartTime\": {\r\n            \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\r\n        \"sequence\": 0,\r\n        \"reminders\": {\r\n            \"useDefault\": true\r\n        },\r\n        \"eventType\": \"default\"\r\n    },\r\n    {\r\n        \"kind\": \"calendar#event\",\r\n        \"etag\": \"\\\"3181161784712000\\\"\",\r\n        \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200521T140000Z\",\r\n        \"status\": \"confirmed\",\r\n        \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MjFUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n        \"created\": \"2020-05-19T19:17:46.000Z\",\r\n        \"updated\": \"2020-05-27T12:01:32.356Z\",\r\n        \"summary\": \"Learn JavaScript\",\r\n        \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\r\n        \"location\": \"London, UK\",\r\n        \"creator\": {\r\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n            \"self\": true\r\n        },\r\n        \"organizer\": {\r\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n            \"self\": true\r\n        },\r\n        \"start\": {\r\n            \"dateTime\": \"2020-05-21T16:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"end\": {\r\n            \"dateTime\": \"2020-05-21T17:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\r\n        \"originalStartTime\": {\r\n            \"dateTime\": \"2020-05-21T16:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\r\n        \"sequence\": 0,\r\n        \"reminders\": {\r\n            \"useDefault\": true\r\n        },\r\n        \"eventType\": \"default\"\r\n    },\r\n\r\n];\r\n\r\nexport { mockData };\r\n","import { mockData } from './mock-data';\r\nimport axios from 'axios';\r\nimport NProgress from 'nprogress';\r\n\r\n//takes an events array, then uses map to create a new array with only locations\r\n//its also removes all duplicates\r\nexport const extractLocations = (events) => {\r\n    var extractLocations = events.map((event) => event.location);\r\n    var locations = [...new Set(extractLocations)];\r\n    return locations;\r\n};\r\n\r\n//checks whether the accessToken found is valid or not, if not then redirect & send user to Google Auth Screen\r\nexport const checkToken = async (accessToken) => {\r\n    const result = await fetch(\r\n        `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\r\n    )\r\n        .then((res) => res.json())\r\n        .catch((error) => error);\r\n    // .catch((error) => error.json());\r\n\r\n    return result;\r\n};\r\n\r\n//if using localhost, mock data returns, otherwise real API\r\n\r\nexport const getEvents = async () => {\r\n    NProgress.start();\r\n\r\n    if (window.location.href.startsWith('http://localhost')) {\r\n        NProgress.done();\r\n        return mockData;\r\n    }\r\n\r\n    if (!navigator.onLine) {\r\n        const events = await localStorage.getItem(\"lastEvents\");\r\n        NProgress.done();\r\n        return events ? JSON.parse(events).events : [];;\r\n    }\r\n\r\n    //Checks for an access token\r\n\r\n    const token = await getAccessToken();\r\n\r\n    if (token) {\r\n        removeQuery();\r\n        const url = 'https://ws7mmh68n1.execute-api.eu-central-1.amazonaws.com/dev/api/get-events' + '/' + token;\r\n        const result = await axios.get(url);\r\n        if (result.data) {\r\n            var locations = extractLocations(result.data.events);\r\n            localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\r\n            localStorage.setItem(\"locations\", JSON.stringify(locations));\r\n        }\r\n        NProgress.done();\r\n        return result.data.events;\r\n    }\r\n};\r\n\r\n//checks whether there's a path, then builds the URL with the current path (or w/o a path using\r\n//using window.history.pushState())   remvoves code from URL when finished with it\r\nconst removeQuery = () => {\r\n    if (window.history.pushState && window.location.pathname) {\r\n        var newurl =\r\n            window.location.protocol +\r\n            \"//\" +\r\n            window.location.host +\r\n            window.location.pathname;\r\n        window.history.pushState(\"\", \"\", newurl);\r\n    } else {\r\n        newurl = window.location.protocol + \"//\" + window.location.host;\r\n        window.history.pushState(\"\", \"\", newurl);\r\n    }\r\n};\r\n\r\n//gets access token if one doesn't extist\r\nconst getToken = async (code) => {\r\n    const encodeCode = encodeURIComponent(code);\r\n    const { access_token } = await fetch(\r\n        'https://ws7mmh68n1.execute-api.eu-central-1.amazonaws.com/dev/api/token' + '/' + encodeCode\r\n    )\r\n        .then((res) => {\r\n            return res.json();\r\n        })\r\n        .catch((error) => error);\r\n\r\n    access_token && localStorage.setItem(\"access_token\", access_token);\r\n\r\n    return access_token;\r\n};\r\n\r\n//Access Token in Calendar API\r\nexport const getAccessToken = async () => {\r\n    const accessToken = localStorage.getItem('access_token');\r\n    const tokenCheck = accessToken && (await checkToken(accessToken));\r\n\r\n    if (!accessToken || tokenCheck.error) {\r\n        await localStorage.removeItem(\"access_token\");\r\n        const searchParams = new URLSearchParams(window.location.search);\r\n        const code = await searchParams.get(\"code\");\r\n        if (!code) {\r\n            const results = await axios.get(\r\n                \"https://ws7mmh68n1.execute-api.eu-central-1.amazonaws.com/dev/api/get-auth-url\"\r\n            );\r\n            const { authUrl } = results.data;\r\n            return (window.location.href = authUrl);\r\n        }\r\n        return code && getToken(code);\r\n    }\r\n    return accessToken;\r\n};","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport EventList from './EventList';\r\nimport CitySearch from './CitySearch';\r\nimport NumberOfEvents from './NumberOfEvents';\r\nimport EventGenre from './EventGenre';\r\nimport WelcomeScreen from './WelcomeScreen';\r\nimport { getEvents, extractLocations, checkToken, getAccessToken } from\r\n  './api';\r\nimport { OfflineAlert } from './Alert';\r\nimport {\r\n  ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer\r\n} from 'recharts';\r\nimport './nprogress.css';\r\nimport logo from './img/logo.svg'\r\n\r\nclass App extends Component {\r\n  state = {\r\n    events: [],\r\n    locations: [],\r\n    numberOfEvents: 32,\r\n    currentLocation: \"all\",\r\n    offlineAlert: '',\r\n    showWelcomeScreen: undefined\r\n  };\r\n\r\n  async componentDidMount() {\r\n    this.mounted = true;\r\n    const accessToken = localStorage.getItem('access_token');\r\n    const isTokenValid = (await checkToken(accessToken)).error ? false :\r\n      true;\r\n    const searchParams = new URLSearchParams(window.location.search);\r\n    const code = searchParams.get(\"code\");\r\n    this.setState({ showWelcomeScreen: !(code || isTokenValid) });\r\n    if ((code || isTokenValid) && this.mounted) {\r\n      getEvents().then((events) => {\r\n        if (this.mounted) {\r\n          this.setState({ events, locations: extractLocations(events) });\r\n        }\r\n      });\r\n    }\r\n    if (!navigator.onLine) {\r\n      this.setState({\r\n        offlineAlert:\r\n          \"App is running offline, events list may not be up to date.\",\r\n      });\r\n    }\r\n\r\n    if (navigator.onLine) {\r\n      this.setState({\r\n        offlineAlert: \"\",\r\n      });\r\n    }\r\n  }\r\n\r\n  updateEvents = (location, eventCount) => {\r\n    const { currentLocation, numberOfEvents } = this.state;\r\n    if (location) {\r\n      getEvents().then((events) => {\r\n        const locationEvents = (location === \"all\") ?\r\n          events :\r\n          events.filter((event) => event.location === location);\r\n        const filteredEvents = locationEvents.slice(0, numberOfEvents);\r\n        this.setState({\r\n          events: filteredEvents,\r\n          currentLocation: location,\r\n        });\r\n      });\r\n    }\r\n\r\n    else {\r\n      getEvents().then((events) => {\r\n        const locationEvents = (currentLocation === \"all\") ?\r\n          events :\r\n          events.filter((event) => event.location === currentLocation);\r\n        const filteredEvents = locationEvents.slice(0, eventCount);\r\n        this.setState({\r\n          events: filteredEvents,\r\n          numberOfEvents: eventCount,\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  getData = () => {\r\n    const { locations, events } = this.state;\r\n    const data = locations.map((location) => {\r\n      const number = events.filter((event) => event.location === location).length\r\n      const city = location.split(', ').shift()\r\n      return { city, number };\r\n    })\r\n    return data;\r\n  };\r\n\r\n  render() {\r\n    if (this.state.showWelcomeScreen === undefined) return <div\r\n      className=\"App\" />\r\n    return (\r\n      <div className=\"App\">\r\n        <nav className=\"nav\">\r\n          <img className=\"logo\" src={logo} alt=\"logo\"></img>\r\n        </nav>\r\n\r\n        <OfflineAlert text={this.state.offlineAlert} />\r\n        <CitySearch locations={this.state.locations} updateEvents={this.updateEvents} />\r\n        <NumberOfEvents numberOfEvents={this.state.numberOfEvents} updateEvents={this.updateEvents} />\r\n\r\n        <h4 style={{ fontSize: \"2rem\", margin: \"3.5rem 0 2.5rem\" }}>Events in each city</h4>\r\n\r\n        <div className=\"data-vis-wrapper\">\r\n          <EventGenre events={this.state.events} />\r\n          <ResponsiveContainer height={400} >\r\n            <ScatterChart margin={{ top: 20, right: 20, bottom: 20, left: 20 }}>\r\n              <CartesianGrid />\r\n              <XAxis\r\n                type=\"category\" dataKey=\"city\" name=\"City\"\r\n                label={{ value: 'city', position: 'insideBottomCenter', dy: 20 }}\r\n              />\r\n              <YAxis\r\n                type=\"number\" dataKey=\"number\" name=\"number of events\" allowDecimals={false}\r\n                label={{ value: 'Number of Events', angle: -90, position: 'insideLeft' }}\r\n              />\r\n              <Tooltip cursor={{ strokeDasharray: '3 3' }} />\r\n              <Scatter data={this.getData()} fill=\"#8884d8\" />\r\n            </ScatterChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n\r\n        <EventList events={this.state.events} />\r\n        <WelcomeScreen showWelcomeScreen={this.state.showWelcomeScreen}\r\n          getAccessToken={() => { getAccessToken() }} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport * as atatus from 'atatus-spa';\r\n\r\natatus.config('d845bdbd37ca4554bfc9f19bd4c7b74f').install();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\n// serviceWorkerRegistration.unregister();\r\nserviceWorkerRegistration.register();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}