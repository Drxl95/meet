{"version":3,"sources":["Event.js","EventList.js","Alert.js","CitySearch.js","NumberOfEvents.js","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","detailsOpen","this","setState","event","props","className","summary","Date","start","dateTime","toString","location","href","description","onClick","showDetails","Component","EventList","events","map","id","Alert","getStyle","color","style","text","InfoAlert","ErrorAlert","CitySearch","query","suggestions","showSuggestions","undefined","handleInputChanged","value","target","locations","filter","toUpperCase","indexOf","length","infoText","handleItemClicked","suggestion","updateEvents","type","onChange","onFocus","placeholder","display","NumberOfEvents","numberOfEvents","inputChange","e","eventCount","console","log","errorText","mockData","extractLocations","Set","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","getEvents","NProgress","window","startsWith","done","getAccessToken","token","removeQuery","url","axios","get","data","localStorage","setItem","JSON","stringify","history","pushState","pathname","newurl","protocol","host","getToken","code","encodeCode","encodeURIComponent","access_token","getItem","tokenCheck","removeItem","searchParams","URLSearchParams","search","results","authUrl","App","currentLocation","filteredEvents","slice","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","atatus","install","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.d3590fac.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Event extends Component {\r\n    state = {\r\n        detailsOpen: false,\r\n    }\r\n\r\n    showDetails() {\r\n        if (this.state.detailsOpen === false) {\r\n            this.setState({ detailsOpen: true })\r\n        } else {\r\n            this.setState({ detailsOpen: false })\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { event } = this.props\r\n        return (\r\n            <div className=\"event\">\r\n                <h1 className=\"name\">{event.summary}</h1>\r\n                <p className=\"date\">{new Date(event.start.dateTime).toString()}</p>\r\n                <p className=\"location\">{event.location}</p>\r\n                <h3>About event:</h3>\r\n                <a className=\"link\" href=\"#\">See details on Google Calendar</a>\r\n                <p className=\"details\">{!this.state.detailsOpen ? \"\" : event.description}</p>\r\n                <button className=\"details-btn\" onClick={() => {\r\n                    this.showDetails()\r\n                }}>\r\n                    {!this.state.detailsOpen ? \"more details\" : \"less details\"}\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Event;","import React, { Component } from 'react';\r\n\r\nimport Event from './Event';\r\n\r\nclass EventList extends Component {\r\n    render() {\r\n        const { events } = this.props;\r\n        return (\r\n            <ul className=\"EventList\">\r\n                {events.map(event =>\r\n                    <li key={event.id}>\r\n                        <Event event={event} />\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EventList;","import React, { Component } from 'react';\r\n\r\nclass Alert extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.color = null;\r\n    }\r\n\r\n    getStyle = () => {\r\n        return {\r\n            color: this.color,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Alert\">\r\n                <p style={this.getStyle()}>{this.props.text}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass InfoAlert extends Alert {\r\n    constructor(props) {\r\n        super(props);\r\n        this.color = 'blue';\r\n    }\r\n}\r\n\r\nclass ErrorAlert extends Alert {\r\n    constructor(props) {\r\n        super(props);\r\n        this.color = 'red';\r\n    }\r\n}\r\n\r\nexport { InfoAlert, ErrorAlert };\r\n","import React, { Component } from 'react';\r\nimport { InfoAlert } from './Alert';\r\n\r\nclass CitySearch extends Component {\r\n    state = {\r\n        query: '',\r\n        suggestions: [],\r\n        showSuggestions: undefined\r\n    }\r\n\r\n\r\n    handleInputChanged = (event) => {\r\n        const value = event.target.value;\r\n        const suggestions = this.props.locations.filter((location) => {\r\n            return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n        });\r\n        if (suggestions.length === 0) {\r\n            this.setState({\r\n                query: value,\r\n                infoText: 'We can not find the city you are looking for. Please try another city.',\r\n            });\r\n        } else {\r\n            return this.setState({\r\n                query: value,\r\n                suggestions,\r\n                infoText: ''\r\n            });\r\n        }\r\n\r\n    };\r\n    handleItemClicked = (suggestion) => {\r\n        this.setState({\r\n            query: suggestion,\r\n            suggestions: [],\r\n            showSuggestions: false,\r\n            infoText: ''\r\n        });\r\n\r\n        this.props.updateEvents(suggestion);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"CitySearch\">\r\n                <InfoAlert text={this.state.infoText} />\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"city\"\r\n                    value={this.state.query}\r\n                    onChange={this.handleInputChanged}\r\n                    onFocus={() => {\r\n                        this.setState({ showSuggestions: true })\r\n                    }}\r\n                    placeholder=\"Search for a city\"\r\n                />\r\n                <ul className=\"suggestions\" style={this.state.showSuggestions ? {} : { display: 'none' }}>\r\n                    {this.state.suggestions.map((suggestion) => (\r\n                        <li\r\n                            key={suggestion}\r\n                            onClick={() => this.handleItemClicked(suggestion)}\r\n                        >{suggestion}</li>\r\n                    ))}\r\n                    <li>\r\n                        <b onClick={() => this.handleItemClicked(\"all\")}>See all cities</b>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CitySearch;\r\n\r\n","import React, { Component } from \"react\";\r\nimport { ErrorAlert } from './Alert';\r\n\r\nclass NumberOfEvents extends Component {\r\n    state = {\r\n        numberOfEvents: 32,\r\n    };\r\n\r\n    inputChange = (e) => {\r\n        let eventCount = e.target.value;\r\n        console.log(eventCount);\r\n        if (eventCount < 1 || eventCount > 32) {\r\n            this.setState({\r\n                numberOfEvents: eventCount,\r\n                errorText: 'Please enter a number between 1 and 32',\r\n            });\r\n        } else if (eventCount) {\r\n            this.setState({\r\n                numberOfEvents: eventCount,\r\n                errorText: ''\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                numberOfEvents: eventCount,\r\n                errorText: ''\r\n            });\r\n        }\r\n\r\n        this.props.updateEvents(null, eventCount);\r\n    };\r\n\r\n    render() {\r\n        const { numberOfEvents } = this.state;\r\n\r\n        return (\r\n            <div className=\"numberOfEvents\">\r\n                <ErrorAlert text={this.state.errorText} />\r\n                <label className=\"number-of-events\">Events: </label>\r\n                <input type=\"number\" className=\"change-number\" value={numberOfEvents} onChange={this.inputChange} />\r\n            </div>\r\n        );\r\n    }\r\n};\r\nexport default NumberOfEvents; ","\r\nconst mockData = [\r\n\r\n    {\r\n        \"kind\": \"calendar#event\",\r\n        \"etag\": \"\\\"3181161784712000\\\"\",\r\n        \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\r\n        \"status\": \"confirmed\",\r\n        \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n        \"created\": \"2020-05-19T19:17:46.000Z\",\r\n        \"updated\": \"2020-05-27T12:01:32.356Z\",\r\n        \"summary\": \"Learn JavaScript\",\r\n        \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\r\n        \"location\": \"London, UK\",\r\n        \"creator\": {\r\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n            \"self\": true\r\n        },\r\n        \"organizer\": {\r\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n            \"self\": true\r\n        },\r\n        \"start\": {\r\n            \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"end\": {\r\n            \"dateTime\": \"2020-05-19T17:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\r\n        \"originalStartTime\": {\r\n            \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\r\n        \"sequence\": 0,\r\n        \"reminders\": {\r\n            \"useDefault\": true\r\n        },\r\n        \"eventType\": \"default\"\r\n    },\r\n    {\r\n        \"kind\": \"calendar#event\",\r\n        \"etag\": \"\\\"3181159875584000\\\"\",\r\n        \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\r\n        \"status\": \"confirmed\",\r\n        \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n        \"created\": \"2020-05-19T19:14:30.000Z\",\r\n        \"updated\": \"2020-05-27T11:45:37.792Z\",\r\n        \"summary\": \"React is Fun\",\r\n        \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\r\n        \"location\": \"Berlin, Germany\",\r\n        \"creator\": {\r\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n            \"self\": true\r\n        },\r\n        \"organizer\": {\r\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n            \"self\": true\r\n        },\r\n        \"start\": {\r\n            \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"end\": {\r\n            \"dateTime\": \"2020-05-20T15:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\r\n        \"originalStartTime\": {\r\n            \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\r\n        \"sequence\": 0,\r\n        \"reminders\": {\r\n            \"useDefault\": true\r\n        },\r\n        \"eventType\": \"default\"\r\n    },\r\n    {\r\n        \"kind\": \"calendar#event\",\r\n        \"etag\": \"\\\"3181161784712000\\\"\",\r\n        \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200521T140000Z\",\r\n        \"status\": \"confirmed\",\r\n        \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MjFUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n        \"created\": \"2020-05-19T19:17:46.000Z\",\r\n        \"updated\": \"2020-05-27T12:01:32.356Z\",\r\n        \"summary\": \"Learn JavaScript\",\r\n        \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\r\n        \"location\": \"London, UK\",\r\n        \"creator\": {\r\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n            \"self\": true\r\n        },\r\n        \"organizer\": {\r\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n            \"self\": true\r\n        },\r\n        \"start\": {\r\n            \"dateTime\": \"2020-05-21T16:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"end\": {\r\n            \"dateTime\": \"2020-05-21T17:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\r\n        \"originalStartTime\": {\r\n            \"dateTime\": \"2020-05-21T16:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\r\n        \"sequence\": 0,\r\n        \"reminders\": {\r\n            \"useDefault\": true\r\n        },\r\n        \"eventType\": \"default\"\r\n    },\r\n\r\n];\r\n\r\nexport { mockData };\r\n","import { mockData } from './mock-data';\r\nimport axios from 'axios';\r\nimport NProgress from 'nprogress';\r\n\r\n//takes an events array, then uses map to create a new array with only locations\r\n//its also removes all duplicates\r\nexport const extractLocations = (events) => {\r\n    var extractLocations = events.map((event) => event.location);\r\n    var locations = [...new Set(extractLocations)];\r\n    return locations;\r\n};\r\n\r\n//checks whether the accessToken found is valid or not, if not then redirect & send user to Google Auth Screen\r\nconst checkToken = async (accessToken) => {\r\n    const result = await fetch(\r\n        `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\r\n    )\r\n        .then((res) => res.json())\r\n        .catch((error) => error.json());\r\n\r\n    return result;\r\n};\r\n\r\n//if using localhost, mock data returns, otherwise real API\r\n\r\nexport const getEvents = async () => {\r\n    NProgress.start();\r\n\r\n    if (window.location.href.startsWith('http://localhost')) {\r\n        NProgress.done();\r\n        return mockData;\r\n    }\r\n    //Checks for an access token\r\n\r\n    const token = await getAccessToken();\r\n\r\n    if (token) {\r\n        removeQuery();\r\n        const url = 'https://ws7mmh68n1.execute-api.eu-central-1.amazonaws.com/dev/api/get-events' + '/' + token;\r\n        const result = await axios.get(url);\r\n        if (result.data) {\r\n            var locations = extractLocations(result.data.events);\r\n            localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\r\n            localStorage.setItem(\"locations\", JSON.stringify(locations));\r\n        }\r\n        NProgress.done();\r\n        return result.data.events;\r\n    }\r\n};\r\n\r\n//checks whether there's a path, then builds the URL with the current path (or w/o a path using\r\n//using window.history.pushState())   remvoves code from URL when finished with it\r\nconst removeQuery = () => {\r\n    if (window.history.pushState && window.location.pathname) {\r\n        var newurl =\r\n            window.location.protocol +\r\n            \"//\" +\r\n            window.location.host +\r\n            window.location.pathname;\r\n        window.history.pushState(\"\", \"\", newurl);\r\n    } else {\r\n        newurl = window.location.protocol + \"//\" + window.location.host;\r\n        window.history.pushState(\"\", \"\", newurl);\r\n    }\r\n};\r\n\r\n//gets access token if one doesn't extist\r\nconst getToken = async (code) => {\r\n    const encodeCode = encodeURIComponent(code);\r\n    const { access_token } = await fetch(\r\n        'https://ws7mmh68n1.execute-api.eu-central-1.amazonaws.com/dev/api/token' + '/' + encodeCode\r\n    )\r\n        .then((res) => {\r\n            return res.json();\r\n        })\r\n        .catch((error) => error);\r\n\r\n    access_token && localStorage.setItem(\"access_token\", access_token);\r\n\r\n    return access_token;\r\n};\r\n\r\n//Access Token in Calendar API\r\nexport const getAccessToken = async () => {\r\n    const accessToken = localStorage.getItem('access_token');\r\n    const tokenCheck = accessToken && (await checkToken(accessToken));\r\n\r\n    if (!accessToken || tokenCheck.error) {\r\n        await localStorage.removeItem(\"access_token\");\r\n        const searchParams = new URLSearchParams(window.location.search);\r\n        const code = await searchParams.get(\"code\");\r\n        if (!code) {\r\n            const results = await axios.get(\r\n                \"https://ws7mmh68n1.execute-api.eu-central-1.amazonaws.com/dev/api/get-auth-url\"\r\n            );\r\n            const { authUrl } = results.data;\r\n            return (window.location.href = authUrl);\r\n        }\r\n        return code && getToken(code);\r\n    }\r\n    return accessToken;\r\n};\r\n\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport EventList from './EventList';\r\nimport CitySearch from './CitySearch';\r\nimport NumberOfEvents from './NumberOfEvents';\r\nimport { getEvents, extractLocations } from './api';\r\nimport './nprogress.css';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    events: [],\r\n    locations: [],\r\n    numberOfEvents: 32,\r\n    currentLocation: \"all\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    getEvents().then((events) => {\r\n      const filteredEvents = events.slice(0, this.state.numberOfEvents);\r\n      this.setState({\r\n        events: filteredEvents,\r\n        locations: extractLocations(events),\r\n      });\r\n    });\r\n  }\r\n\r\n  updateEvents = (location, eventCount) => {\r\n    const { currentLocation, numberOfEvents } = this.state;\r\n    if (location) {\r\n      getEvents().then((events) => {\r\n        const locationEvents = (location === \"all\") ?\r\n          events :\r\n          events.filter((event) => event.location === location);\r\n        const filteredEvents = locationEvents.slice(0, numberOfEvents);\r\n        this.setState({\r\n          events: filteredEvents,\r\n          currentLocation: location,\r\n        });\r\n      });\r\n    } else {\r\n      getEvents().then((events) => {\r\n        const locationEvents = (currentLocation === \"all\") ?\r\n          events :\r\n          events.filter((event) => event.location === currentLocation);\r\n        const filteredEvents = locationEvents.slice(0, eventCount);\r\n        this.setState({\r\n          events: filteredEvents,\r\n          numberOfEvents: eventCount,\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <CitySearch locations={this.state.locations} updateEvents={this.updateEvents} />\r\n        <NumberOfEvents numberOfEvents={this.state.numberOfEvents} updateEvents={this.updateEvents} />\r\n        <EventList events={this.state.events} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport * as atatus from 'atatus-spa';\r\n\r\natatus.config('d845bdbd37ca4554bfc9f19bd4c7b74f').install();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.unregister();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}